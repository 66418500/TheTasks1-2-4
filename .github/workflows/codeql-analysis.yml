# This is our basic workflow for automating secrets scanning with GitHub Actions
 
name: Secrets Scanning
 
# Controls when the workflow will run
on:
 
 # Triggers the workflow on push or pull request events for the main branch
 push:
   branches: [ master ]
 
# Defining the job(s) to be run to execute secrets scanning
jobs:
 
 # This workflow contains a single job called "Scan-for-secrets"
 Scan-for-secrets:
 
   # The type of runner that the job will run on
   runs-on: ubuntu-latest
 
   # Steps define the order in which the tasks will be executed
   steps:
 
     # Checks-out the repository so our job can access it
     - uses: actions/checkout@v2
    
     # Installs secret scanner on the runner
     - name: Install Whispers
       run: sudo pip install whispers
 
     # Scan repo for secrets
     - name: Run scanner for the repository
       run: whispers ${{ github.workspace }} > /tmp/scan_output.json
 
     # Upload Artifacts
     - name: Upload the scan output
       uses: actions/upload-artifact@v2
       with:
         name: scan_results
         path: /tmp/scan_output.json
         retention-days: 2
     
     - name: Exit actions if there were some critical secret leak
       id: leak_check
       run: echo "::set-output name=leak_level::$((grep 'CRITICAL' /tmp/scan_output.json && echo $?))"
     - name: Pass or fail
       run: |
         if [[ ${{steps.leak_check.outputs.leak_level}} == 0 ]]; then exit 0; else exit 1; fi
